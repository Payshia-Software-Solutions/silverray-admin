import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import React from 'react';

const inter = Inter({ subsets: ['latin'], variable: '--font-inter' });

export const metadata: Metadata = {
  title: 'Firebase Studio App',
  description: 'Generated by Firebase Studio',
};

export default function RootLayout({
  children,
  params: paramsProp,
}: Readonly<{
  children: React.ReactNode;
  params: { [key: string]: string | string[] | undefined };
}>) {
  // Prevent bundler from eliminating `params` through tree-shaking by using `React.use`
  // as recommended by Next.js for handling dynamic APIs.
  const params = React.use(Promise.resolve(paramsProp));

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${inter.variable} font-body antialiased`} suppressHydrationWarning>{children}</body>
    </html>
  );
}
